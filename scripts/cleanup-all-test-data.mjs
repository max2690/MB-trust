import { PrismaClient } from '@prisma/client';
import { config } from 'dotenv';
import { resolve } from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: resolve(process.cwd(), '.env.local') });

const prisma = new PrismaClient();

async function cleanupAllTestData() {
  try {
    console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\n');
    
    // 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    console.log('üìã –®–∞–≥ 1: –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π...');
    const deletedExecutions = await prisma.execution.deleteMany({});
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π: ${deletedExecutions.count}\n`);
    
    // 2. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
    console.log('üì¶ –®–∞–≥ 2: –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤...');
    const deletedOrders = await prisma.order.deleteMany({});
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ${deletedOrders.count}\n`);
    
    // 3. –£–¥–∞–ª—è–µ–º –ø–ª–∞—Ç–µ–∂–∏
    console.log('üí≥ –®–∞–≥ 3: –£–¥–∞–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π...');
    const deletedPayments = await prisma.payment.deleteMany({});
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–µ–π: ${deletedPayments.count}\n`);
    
    // 4. –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('üîó –®–∞–≥ 4: –£–¥–∞–ª–µ–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    // –£–¥–∞–ª—è–µ–º Referrals
    const deletedReferrals = await prisma.referral.deleteMany({});
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${deletedReferrals.count}`);
    
    // –£–¥–∞–ª—è–µ–º ExecutorDailyLimit
    const deletedDailyLimits = await prisma.executorDailyLimit.deleteMany({});
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –ª–∏–º–∏—Ç–æ–≤: ${deletedDailyLimits.count}`);
    
    // –£–¥–∞–ª—è–µ–º Refunds
    const deletedRefunds = await prisma.refund.deleteMany({});
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤: ${deletedRefunds.count}`);
    
    // –£–¥–∞–ª—è–µ–º ActivationStory
    const deletedStories = await prisma.activationStory.deleteMany({});
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∏—Å—Ç–æ—Ä–∏–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${deletedStories.count}`);
    
    // –£–¥–∞–ª—è–µ–º Payouts
    const deletedPayouts = await prisma.payout.deleteMany({});
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤—ã–ø–ª–∞—Ç: ${deletedPayouts.count}`);
    
    // –£–¥–∞–ª—è–µ–º TelegramVerification
    const deletedTelegramVerifications = await prisma.telegramVerification.deleteMany({});
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–π Telegram: ${deletedTelegramVerifications.count}\n`);
    
    // 5. –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞)
    console.log('üë§ –®–∞–≥ 5: –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const testUsers = await prisma.user.findMany({
      where: {
        id: {
          not: 'admin-god' // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
        },
        OR: [
          { id: { startsWith: 'test-' } },
          { email: { contains: '@test' } },
          { phone: { contains: '+7-999' } },
          { phone: { contains: '+7 (999)' } },
          { name: { contains: '–¢–µ—Å—Ç' } },
          { email: { contains: 'customer-test' } },
          { email: { contains: 'executor-test' } }
        ]
      }
    });
    
    for (const user of testUsers) {
      // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —É–¥–∞–ª–µ–Ω—ã –≤—ã—à–µ)
      await prisma.user.delete({
        where: { id: user.id }
      });
      console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.name} (${user.email || user.phone})`);
    }
    console.log(`   –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${testUsers.length}\n`);
    
    // 6. –£–¥–∞–ª—è–µ–º –Ω–µ–¥–∞–≤–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö (–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π)
    console.log('üìÖ –®–∞–≥ 6: –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–¥–∞–≤–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const sevenDaysAgo = new Date();
    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
    
    const recentUsers = await prisma.user.findMany({
      where: {
        createdAt: {
          gte: sevenDaysAgo
        },
        id: {
          not: 'admin-god'
        }
      }
    });
    
    for (const user of recentUsers) {
      await prisma.user.delete({
        where: { id: user.id }
      });
      console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω –Ω–µ–¥–∞–≤–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.name} (${user.email || user.phone}) - —Å–æ–∑–¥–∞–Ω ${user.createdAt.toLocaleDateString('ru-RU')}`);
    }
    console.log(`   –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ –Ω–µ–¥–∞–≤–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${recentUsers.length}\n`);
    
    console.log('‚ú® –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

cleanupAllTestData();
